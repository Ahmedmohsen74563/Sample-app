trigger:
  branches:
    include:
      - main  # Runs when the main branch is updated

pool:
  vmImage: 'ubuntu-latest'  # Use 'macOS-latest' for iOS

steps:
# STEP 1: Install Flutter SDK
- task: FlutterInstall@0
  inputs:
    mode: 'auto'
    channel: 'stable'
    version: 'latest'

# STEP 2: Verify Flutter & Install Dependencies
# ----------------------------------------
- script: |
    export PATH="$FLUTTER_HOME/bin:$PATH"    # Tell where is the flutter binary so you can run flutter commands
    flutter --version
    flutter doctor -v  # âœ… Run doctor for diagnostics
  displayName: ' Run Diagnostics'

- script: |
    export PATH="$FLUTTER_HOME/bin:$PATH"
    flutter pub get
  displayName: 'Setup Flutter'  

# STEP 3: Build APK
# ----------------------------------------
- task: FlutterBuild@0
  inputs:
    target: 'apk'
    projectDirectory: '.'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'build/app/outputs/flutter-apk/'
    Contents: '*.apk'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:

    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'release-apk'
    publishLocation: 'Container'              # Publish to Azure DevOps artifact storage (the built-in file store for your project).


    